openapi: 3.0.3
info:
  title: Investment Portfolio API
  version: 1.0.0
  description: RESTful API to manage user investment portfolios with asset transactions.

paths:
  /portfolios:
    post:
      summary: Create a new portfolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioInput'
      responses:
        '201':
          description: Portfolio created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all portfolios
      responses:
        '200':
          description: List of portfolios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Portfolio'

  /portfolios/{id}:
    get:
      summary: Get a specific portfolio
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '404':
          description: Portfolio not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /portfolios/{id}/transactions:
    post:
      summary: Execute a transaction (buy/sell)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInput'
      responses:
        '201':
          description: Transaction applied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid transaction (e.g., insufficient funds)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Portfolio not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get all transactions for a portfolio
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: Portfolio not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    PortfolioInput:
      type: object
      required: [user_id, name, initial_cash]
      properties:
        user_id:
          type: string
        name:
          type: string
        initial_cash:
          type: number
          format: float
          minimum: 0

    Portfolio:
      type: object
      required: [id, user_id, name, initial_cash, cash, lastUpdated, assets]
      properties:
        id:
          type: string
        user_id:
          type: string
        name:
          type: string
        initial_cash:
          type: number
          format: float
        cash:
          type: number
          format: float
        lastUpdated:
          type: string
          format: date-time
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Asset'

    Asset:
      type: object
      required: [asset_type, symbol, units, average_price, lastUpdated]
      properties:
        asset_type:
          type: string
          enum: [stock, crypto, bond]
        symbol:
          type: string
        units:
          type: number
          format: float
          minimum: 0
        average_price:
          type: number
          format: float
          minimum: 0
        lastUpdated:
          type: string
          format: date-time

    TransactionInput:
      type: object
      required: [type, asset_type, symbol, units, price_per_unit]
      properties:
        type:
          type: string
          enum: [buy, sell]
        asset_type:
          type: string
          enum: [stock, crypto, bond]
        symbol:
          type: string
        units:
          type: number
          format: float
          minimum: 0
        price_per_unit:
          type: number
          format: float
          minimum: 0

    Transaction:
      type: object
      required: [id, portfolio_id, timestamp, type, asset_type, symbol, units, price_per_unit]
      properties:
        id:
          type: string
        portfolio_id:
          type: string
        timestamp:
          type: string
          format: date-time
        type:
          type: string
          enum: [buy, sell]
        asset_type:
          type: string
          enum: [stock, crypto, bond]
        symbol:
          type: string
        units:
          type: number
          format: float
          minimum: 0
        price_per_unit:
          type: number
          format: float
          minimum: 0

    ErrorResponse:
      type: object
      required: [error]
      properties:
        error:
          type: object
          required: [message]
          properties:
            message:
              type: string
            code:
              type: string
            details:
              type: object
